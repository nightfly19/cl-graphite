(in-package :cl-graphite)

(g-defun alias (series-list name) (list series-list (escape-quote-string name)))
(g-defun alias-by-node (series-list &rest nodes) `(,series-list ,@nodes))
(g-defun alias-sub (series-list search replace)
         (cons series-list (mapcar #'escape-quote-string `(,search ,replace))))
(g-defun alpha (series-list alpha) (list series-list alpha))
(g-defun area-between (series-list-a series-list-b) (list series-list-a series-list-b))
(g-defun maximum-above (series-list level) (list series-list level))
(g-defun as-percent (series-list &optional (total "None")) (list series-list total))
(g-defun average-above (series-list n) (list series-list n))
(g-defun average-below (series-list n) (list series-list n))
(g-defun average-series-with-wildcards (series-list &rest position) (cons series-list position))
(g-defun cacti-style (series-list) (list series-list))
(g-defun color (series-list color) (list series-list (escape-quote-string color)))
(g-defun constant-line (value) (list value))
(g-defun cumulative (series-list) (list series-list))
(g-defun current-above (series-list n) (list series-list n))
(g-defun current-below (series-list n) (list series-list n))
(g-defun dashed (series-list) (list series-list))
(g-defun darivative (series-list) (list series-list))
(g-defun diff-series (&rest series) series)
(g-defun devide-series (dividend divisor) (list dividend divisor))
(g-defun draw-as-infinite (series-list) (list series-list))
(g-defun events (&rest tags) (mapcar #'escape-quote-string tags))
(g-defun exclude (series-list pattern) (cons series-list (escape-quote-string pattern)))
(g-defun group-by-node (series node-num callback) (list series node-num (escape-quote-string callback)))
(g-defun highest-average (series-list n) (list series-list n))
(g-defun highest-current (series-list n) (list series-list n))
(g-defun highest-max (series-list n) (list series-list n))
(g-defun hit-count (series-list interval-string) (list series-list (escape-quote-string interval-string)))
(g-defun holt-winters-aberration (series-list &optional (delta 3)) (list series-list delta))
(g-defun holt-winters-confidence-bands (series-list &optional (delta 3)) (list series-list delta))
(g-defun holt-winters-forcast (series-list) (list series-list))
(g-defun integral (series-list) (list series-list))
(g-defun keep-last-value (series-list) (list series-list))
(g-defun legend-value (series-list value-type) (cons series-list (escape-quote-string value-type)))
(g-defun limit (series-list n) (list series-list n))
(g-defun line-width (series-list width) (list series-list width))
(g-defun logarithm (series-list &optional (base 10)) (list series-list base))
(g-defun lowest-average (series-list n) (list series-list n))
(g-defun lowest-current (series-list n) (list series-list n))
(g-defun lowest-max (series-list n) (list series-list n))
(g-defun max-series (&rest series) series)
(g-defun maximum-below (series-list n) (list series-list n))
(g-defun minimum-above (series-list n) (list series-list n))
(g-defun minimum-below (series-list n) (list series-list n))
(g-defun min-series (&rest series) series)
(g-defun most-deviant (series-list n) (list n series-list))
(g-defun moving-average (series-list window-size) (list series-list window-size))
(g-defun moving-median (series-list window-size) (list series-list window-size))
(g-defun multiply-series (&rest series) series)
(g-defun n-percentile (series-list n) (list series-list n))
(g-defun non-negative-derivative (series-list &optional (max-value 10)) (list series-list max-value))
(g-defun offset (series-list factor) (list series-list factor))
(g-defun random-walk-function (name) (list (escape-quote-string name)))
(g-defun range-of-series (&rest series) series)
(g-defun remove-above-percentile (series-list n) (list series-list n))
(g-defun remove-above-value (series-list n) (list series-list n))
(g-defun remove-below-percentile (series-list n) (list series-list n))
(g-defun remove-below-value (series-list n) (list series-list n))
(g-defun scale (series-list factor) (list series-list factor))
(g-defun second-y-axis (series-list) (list series-list))
(g-defun sin-function (series-list &optional (amplitude 10)) (list series-list amplitude))
(g-defun smart-summarize (series-list interval-string &optional (func "sum"))
         (list series-list (escape-quote-string interval-string) (escape-quote-string func)))
(g-defun sort-by-maxima (series-list) (list series-list))
(g-defun sort-by-minima (series-list) (list series-list))
(g-defun stacked (series-list) (list series-list))
(g-defun stdev (series-list points &optional (window-tolerance 0.1))
         (list series-list points window-tolerance))
(g-defun substr (series-list points &optional (start 0) (stop 0))
         (list series-list points start stop))
(g-defun sum-series (&rest series) series)
(g-defun sum-series-with-wildcards (series-list &rest position) (cons series-list position))
(g-defun summarize
         (series-list interval-string &optional (func "sum") (align-to-from "False"))
         (list series-list (escape-quote-string interval-string) (escape-quote-string func) (escape-quote-string align-to-from)))
(g-defun threshold (value &optional (label "None") (color "None"))
         (list value (escape-quote-string label) (escape-quote-string color)))
(g-defun time-function (name) (list name))
(g-defun time-shift (series-list time-shift) (list series-list time-shift))
